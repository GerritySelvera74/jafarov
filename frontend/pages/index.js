import { useEffect, useState } from 'react';
import Navigation from '../components/Navigation';
import axios from 'axios';

const API_URL = process.env.NEXT_PUBLIC_API_URL;

export default function Home() {
  const [status, setStatus] = useState({});
  const [tiktokUsername, setTiktokUsername] = useState('');
  const [newUsername, setNewUsername] = useState('');
  const [loading, setLoading] = useState(false);
  const [connecting, setConnecting] = useState(false);

  useEffect(() => {
    fetchStatus();
    fetchTiktokUsername();
    
    // Poll status every 2 seconds
    const interval = setInterval(() => {
      fetchStatus();
    }, 2000);
    
    return () => clearInterval(interval);
  }, []);

  const fetchStatus = async () => {
    try {
      const res = await axios.get(`${API_URL}/api/status`);
      setStatus(res.data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', error);
    }
  };

  const fetchTiktokUsername = async () => {
    try {
      const res = await axios.get(`${API_URL}/api/config/tiktok_username`);
      setTiktokUsername(res.data.value);
      setNewUsername(res.data.value);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è username:', error);
    }
  };

  const handleUpdateUsername = async () => {
    if (!newUsername.trim()) {
      alert('–í–≤–µ–¥–∏ username!');
      return;
    }

    setLoading(true);
    try {
      await axios.post(`${API_URL}/api/config/tiktok_username`, {
        value: newUsername.trim(),
      });
      setTiktokUsername(newUsername);
      alert('‚úÖ Username –æ–±–Ω–æ–≤–ª–µ–Ω!');
    } catch (error) {
      alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ username');
      console.error(error);
    } finally {
      setLoading(false);
    }
  };

  const handleConnect = async () => {
    if (!tiktokUsername) {
      alert('‚ùå –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏ TikTok username!');
      return;
    }

    setConnecting(true);
    try {
      await axios.post(`${API_URL}/api/tiktok/connect`, {
        username: tiktokUsername,
      });
      alert('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ TikTok –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω–æ!');
      await fetchStatus();
    } catch (error) {
      alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏');
      console.error(error);
    } finally {
      setConnecting(false);
    }
  };

  const handleDisconnect = async () => {
    setConnecting(true);
    try {
      await axios.post(`${API_URL}/api/tiktok/disconnect`);
      alert('‚úÖ –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç TikTok!');
      await fetchStatus();
    } catch (error) {
      alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏');
      console.error(error);
    } finally {
      setConnecting(false);
    }
  };

  return (
    <>
      <Navigation />
      <main className="container-custom py-12">
        <div className="grid md:grid-cols-2 gap-8">
          {/* Welcome Card */}
          <div className="card">
            <h1 className="gradient-text text-4xl font-bold mb-4">
              üéÆ MAFIA TT Game
            </h1>
            <p className="text-gray-300 mb-6">
              –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–π –≤ –º–∞—Ñ–∏—é –Ω–∞ TikTok —Å—Ç—Ä–∏–º–∞—Ö. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π –∏–≥—Ä–æ–∫–æ–≤, —É–ø—Ä–∞–≤–ª—è–π —Ä–æ–ª—è–º–∏ –∏ —Ä–∞–∑–¥–∞–≤–∞–π –∫–∞—Ä—Ç—ã!
            </p>
            <div className="space-y-3">
              <p className="flex items-center gap-2">
                <span className="text-xl">ü§ñ</span>
                –ë–æ—Ç –¥–ª—è –¢–ì: <span className="font-bold text-purple-400">@TTMAFbot</span>
              </p>
              <p className="text-sm text-gray-400">
                –õ—é–¥–∏ –º–æ–≥—É—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –æ—á–µ—Ä–µ–¥–∏!
              </p>
            </div>
          </div>

          {/* Status Card */}
          <div className="card">
            <h2 className="text-2xl font-bold mb-4 gradient-text">üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</h2>
            <div className="space-y-3">
              <div className="flex justify-between items-center p-3 bg-dark/50 rounded-lg">
                <span>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:</span>
                <span className={status.db ? 'üü¢ –ê–∫—Ç–∏–≤–Ω–∞' : 'üî¥ –û—Ç–∫–ª—é—á–µ–Ω–∞'}>
                  {status.db ? 'üü¢ –ê–∫—Ç–∏–≤–Ω–∞' : 'üî¥ –û—Ç–∫–ª—é—á–µ–Ω–∞'}
                </span>
              </div>
              <div className="flex justify-between items-center p-3 bg-dark/50 rounded-lg">
                <span>TikTok —Å—Ç—Ä–∏–º:</span>
                <span>
                  {status.tiktok ? 'üü¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ' : 'üî¥ –û—Ç–∫–ª—é—á–µ–Ω–æ'}
                </span>
              </div>
              <div className="flex justify-between items-center p-3 bg-dark/50 rounded-lg">
                <span>Telegram Bot:</span>
                <span>
                  {status.bot ? 'üü¢ –†–∞–±–æ—Ç–∞–µ—Ç' : 'üî¥ –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}
                </span>
              </div>
            </div>
          </div>
        </div>

        {/* TikTok Username Config */}
        <div className="card mt-8">
          <h2 className="text-2xl font-bold mb-6 gradient-text">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ TikTok</h2>
          
          <div className="bg-dark/50 p-4 rounded-lg mb-6 border border-purple-500/20">
            <p className="text-sm text-gray-300 mb-2">–¢–µ–∫—É—â–∏–π username:</p>
            <p className="text-xl font-bold text-purple-400">@{tiktokUsername || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}</p>
          </div>

          <div className="flex gap-3 flex-wrap mb-6">
            <input
              type="text"
              placeholder="–í–≤–µ–¥–∏ –Ω–æ–≤—ã–π username (–±–µ–∑ @)"
              value={newUsername}
              onChange={(e) => setNewUsername(e.target.value)}
              className="input-field flex-1 min-w-[200px]"
            />
            <button
              onClick={handleUpdateUsername}
              disabled={loading}
              className="btn-primary"
            >
              {loading ? '‚è≥ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å'}
            </button>
          </div>

          <p className="text-sm text-gray-400 mb-6">
            ‚ÑπÔ∏è –ò–∑–º–µ–Ω–∏ username TikTok –≤–µ–¥—É—â–µ–≥–æ. –ë–æ—Ç –±—É–¥–µ—Ç —Å–ª—É—à–∞—Ç—å –µ–≥–æ —Å—Ç—Ä–∏–º –∏ –ª–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã !reg
          </p>

          {/* Connect/Disconnect Buttons */}
          <div className="flex gap-3">
            <button
              onClick={handleConnect}
              disabled={connecting || status.tiktok}
              className={`flex-1 py-3 rounded-lg font-bold transition ${
                status.tiktok
                  ? 'bg-green-600/50 text-green-300 cursor-not-allowed'
                  : 'btn-primary hover:bg-green-600'
              }`}
            >
              {connecting ? '‚è≥ –ü–æ–¥–∫–ª—é—á–∞—é...' : status.tiktok ? '‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ' : 'üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è'}
            </button>
            <button
              onClick={handleDisconnect}
              disabled={connecting || !status.tiktok}
              className={`flex-1 py-3 rounded-lg font-bold transition ${
                !status.tiktok
                  ? 'bg-gray-600/50 text-gray-400 cursor-not-allowed'
                  : 'btn-primary bg-red-600 hover:bg-red-700'
              }`}
            >
              {connecting ? '‚è≥ –û—Ç–∫–ª—é—á–∞—é...' : '‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å—Å—è'}
            </button>
          </div>
        </div>

        {/* Bot Link */}
        <div className="card mt-8 bg-gradient-to-r from-purple-500/10 to-pink-500/10 border-purple-500/30">
          <h3 className="text-xl font-bold mb-3">üîó –ü–æ–¥–µ–ª–∏—Å—å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –±–æ—Ç–∞</h3>
          <div className="bg-dark/50 p-4 rounded-lg mb-4 font-mono text-sm">
            https://t.me/TTMAFbot
          </div>
          <p className="text-sm text-gray-300">
            –û—Ç–ø—Ä–∞–≤—å —ç—Ç—É —Å—Å—ã–ª–∫—É –ª—é–¥—è–º, —á—Ç–æ–±—ã –æ–Ω–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
          </p>
        </div>
      </main>
    </>
  );
}